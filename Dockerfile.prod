# This file is not being used for this project as Vercel does not support it.

# This Dockerfile builds and serves a production-ready frontend with Vite and Nginx.

# ──────────────────────────────────────────────
# Stage 1: Build the React/Vite frontend
# ──────────────────────────────────────────────
FROM node:18-alpine AS build

# Set the working directory
WORKDIR /app

# Copy only the package files to install dependencies (improves cache efficiency)
COPY package*.json ./
RUN npm install

# Copy the rest of the project files
COPY . .

# Pass the backend URL as an ARG (e.g. from Render)
ARG VITE_BACKEND_URL
ENV VITE_BACKEND_URL=$VITE_BACKEND_URL

# Optional: Increase memory limit to avoid build errors on large apps
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Run the production build
RUN npm run build

# ──────────────────────────────────────────────
# Stage 2: Serve static files with Nginx
# ──────────────────────────────────────────────
FROM nginx:stable-alpine

# Clean default nginx static content
RUN rm -rf /usr/share/nginx/html/*

# Copy the built frontend from the previous stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy the Nginx template file (with backend substitution)
COPY nginx.conf.template /etc/nginx/nginx.conf.template

# Copy and prepare the entrypoint script
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Set the custom entrypoint script (uses envsubst to inject VITE_BACKEND_URL into nginx.conf)
CMD ["/docker-entrypoint.sh", "nginx", "-g", "daemon off;"]
